@use '../utils' as *;

/*=============================
	 Button style
===============================*/
.tg-button-wrap {
    @include flexbox();
}
.btn {
    user-select: none;
    -moz-user-select: none;
    background: var(--tg-color-white-default) none repeat scroll 0 0;
    border: 1px solid var(--tg-border-2);
    color: var(--tg-theme-primary);
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    font-size: 16px;
    font-weight: var(--tg-fw-semi-bold);
    font-family: var(--tg-heading-font-family);
    letter-spacing: 0;
    line-height: 1;
    margin-bottom: 0;
    padding: 19px 30px 18px;
    text-align: center;
    text-transform: uppercase;
    touch-action: manipulation;
    @include transition(.3s);
    vertical-align: middle;
    @include border-radius(0);
    white-space: nowrap;
    overflow: hidden;
    --arrow-hover-move-x: 110%;
    --arrow-hover-move-y: 100%;
    gap: 15px;
    & svg {
        transition: all 0.3s ease-out 0s;
        width: 14px;
        & path {
            transition: transform .38s cubic-bezier(.37, .08, .02, .93), opacity .18s ease-out;
            &:nth-of-type(1) {
                transform: translateX(0) translateY(0);
                opacity: 1;
                transition-delay: .15s, .15s;
            }
            &:nth-of-type(2) {
                transform: translateX(calc(-1 * var(--arrow-hover-move-x))) translateY(var(--arrow-hover-move-y));
                opacity: .5;
                transition-delay: 0s, 0s;
            }
        }
    }
    &:hover,
    &:focus-visible {
        background: var(--tg-theme-primary);
        color: var(--tg-color-white-default);
        border-color: var(--tg-theme-primary);
        & svg {
            & path {
                &:nth-of-type(1) {
                    transform: translateX(var(--arrow-hover-move-x)) translateY(calc(-1 * var(--arrow-hover-move-y)));
                    opacity: 0;
                    transition-delay: 0s, 0s;
                }
                &:nth-of-type(2) {
                    transform: translateX(0) translateY(0);
                    opacity: 1;
                    transition-delay: .15s, .15s;
                }
            }
        }
    }
    &.white-btn {
        background: var(--tg-color-white-default);
        color: var(--tg-theme-secondary);
        & svg path {
            stroke: var(--tg-theme-secondary);
        }
    }
    &-two {
        background: var(--tg-theme-primary);
        border-color: var(--tg-theme-primary);
        color: var(--tg-color-white-default);
        &:hover,
        &:focus-visible {
            background: var(--tg-theme-primary);
            color: var(--tg-color-white-default);
            border-color: var(--tg-theme-primary);
        }
    }
    &-three {
        background: var(--tg-theme-secondary);
        color: var(--tg-color-white-default);
        border-color: var(--tg-theme-secondary);
        &:hover,
        &:focus-visible {
            background: var(--tg-theme-primary);
            color: var(--tg-color-white-default);
            border-color: var(--tg-theme-primary);
        }
    }
}

.transparent-btn {
    border: 1px solid rgba(255, 255, 255, 0.12);
    background: rgba(255, 255, 255, 0.06);
    backdrop-filter: blur(7px);
    color: var(--tg-color-white-default);
}

.arrow-btn {
    --arrow-hover-move-x: -110%;
    display: inline-flex;
    align-items: center;
    gap: 10px;
    transition: .3s linear;
    & svg {
        color: var(--tg-color-white-default);
        width: 15px;
        transition: all 0.3s ease-out 0s;
        transform: translateY(-1px);
        & path {
            transition: transform .38s cubic-bezier(.37, .08, .02, .93), opacity .18s ease-out;
            &:nth-of-type(1) {
                transform: translateX(0);
                opacity: 1;
                transition-delay: .15s, .15s;
            }
            &:nth-of-type(2) {
                transform: translateX(calc(1 * var(--arrow-hover-move-x)));
                opacity: .5;
                transition-delay: 0s, 0s;
            }
        }
    }
    &:focus-visible,
    &:hover {
        & svg {
            color: var(--tg-heading-color);
            & path {
                &:nth-of-type(1) {
                    transform: translateX(calc(-1 * var(--arrow-hover-move-x)));
                    opacity: 0;
                    transition-delay: 0s, 0s;
                }
                &:nth-of-type(2) {
                    transform: translateX(0) translateY(0);
                    opacity: 1;
                    transition-delay: .15s, .15s;
                }
            }
        }
    }
}

.border-btn {
    font-size: 16px;
    font-weight: 600;
    border: 1px solid var(--tg-color-dark);
    @include border-radius(0);
    background: transparent;
    text-transform: uppercase;
    color: var(--tg-color-dark);
    padding: 18px 29px;
    &:hover {
        color: var(--tg-color-white-default);
        background: var(--tg-color-dark);
        border-color: var(--tg-color-dark);
    }
}